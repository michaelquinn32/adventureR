{
    "collab_server" : "",
    "contents" : "#' Fit a Naive Bayes Classifier\n#'\n#' @param formula An R formual specifying the Naive Bayes Classifier\n#' @param data A data frame to fit the model\n#'\n#' @details This version of a naive bayes classifier generates predictions through the\n#' log odds of an observation belonging to either class 1 or 0. We can the classifier\n#' \"naive\" because we calculate the odds assuming that each column is independent.\n#'\n#' Our classification rule follows:\n#'\n#' \\deqn{f(x) = 1 \\mathrm{ if } \\log \\frac{P(Y = 1 | X = x)}{P(Y = 0 | X = x)} }\n#' \\deqn{= \\log \\frac{p_1}{p_0} + \\sum_{j = 1}^{p} \\left[ \\frac{1}{2} \\log \\frac{\\sigma_{0j}^2}{\\sigma_{1j}^2} - \\frac{(x_j - \\mu_{1j})^2}{2 \\sigma_{1j}^2} + \\frac{(x_j - \\mu_{0j})^2}{2 \\sigma_{0j}^2}\\right]}\n#'\n#' The \\code{log_odds} function makes it much easier to apply this formula across the entire data frame.\n#'\n#' @return A list with the class \\code{n} containing the following:\n#' \\describe{\n#'      \\item{actual}{the original target values}\n#'      \\item{x}{the original model data matrix}\n#'      \\item{fit}{the class values}\n#'      \\item{preds}{the values of the linear combination}\n#'      \\item{mus}{a list of the group means, each item is a vector}\n#'      \\item{sigmas}{the list of the group variances, each item is a vector}\n#'      \\item{p_rat}{the ratio of prior rates}\n#' }\n#'\n#' @export\n\nnaive_bayes <- function(formula, data) {\n    # Set up the model frame from the formula\n    mf <- model.frame(formula, data)\n    x <- mf[-1]\n    y <- mf[[1]]\n\n    # Assertions\n    stopifnot(length(unique(y)) == 2)\n\n    # Model parameters\n    n <- length(y)\n    ns <- map(split(y, y), length)\n    ps <- map(ns, ~ .x / n)\n    p_rat <- reduce_right(ps, `/`)\n\n    # Group means and variances\n    groups <- split(x, y)\n    mus <- at_depth(groups, 1, map_dbl, mean)\n    sigmas <- at_depth(groups, 1, map_dbl, var)\n\n    # Calculate the log odds\n    preds <- log(p_rat) + apply(x, 1, log_odds, mus, sigmas)\n\n    # Return\n    results <- list(actual = y,\n                    x = x,\n                    fit = as.numeric(preds > 0),\n                    preds = preds,\n                    mus = mus,\n                    sigmas = sigmas,\n                    p_rat = p_rat)\n\n    structure(results, class = \"nb\")\n}\n\n\n#' @describeIn naive_bayes\n#' Calculate Log odds for normally distributed data (a support function)\n#'\n#' @param x the data\n#' @param mus the group means (as vectors)\n#' @param sigmas the group varainces (as vectors)\n#'\n#' @return A numeric scalar\n#' @export\n\nlog_odds <- function(x, mus, sigmas) {\n    var_rat <- reduce(sigmas, `/`)\n    class_dist <- map2(mus, sigmas, ~ (x - .x)^2 / .y)\n    class_mat <- map_call(class_dist, cbind)\n    sum(.5 * log(var_rat) + class_mat %*% c(.5, -.5))\n}\n",
    "created" : 1449336189411.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1084336214",
    "id" : "D8E3C841",
    "lastKnownWriteTime" : 1449336710,
    "path" : "~/Projects/adventureR/R/naive_bayes.R",
    "project_path" : "R/naive_bayes.R",
    "properties" : {
        "marks" : "<:0,0\n>:0,0",
        "tempName" : "Untitled1"
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}